name: build Gmeek

on:
  workflow_dispatch:
  issues:
    types: [opened, edited]
  schedule:
    - cron: "0 16 * * *"
    
jobs:
  build:
    name: Generate blog
    runs-on: ubuntu-24.04
    if: ${{ github.event.repository.owner.id == github.event.sender.id || github.event_name == 'schedule' }}
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Get config.json
        run: |
          echo "====== check config.josn file ======"
          cat config.json
          echo "====== check config.josn end  ======"
          sudo apt-get install jq

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.8

      - name: Clone source code
        run: |
          GMEEK_VERSION=$(jq -r ".GMEEK_VERSION" config.json)
          git clone https://github.com/Meekdai/Gmeek.git /opt/Gmeek;
          cd /opt/Gmeek/
          lastTag=$(git describe --tags `git rev-list --tags --max-count=1`)
          if [ $GMEEK_VERSION == 'last' ]; then git checkout $lastTag; else git checkout $GMEEK_VERSION; fi;

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r /opt/Gmeek/requirements.txt

      - name: Generate new html
        run: |
          cp -r ./* /opt/Gmeek/
          cd /opt/Gmeek/
          
          echo "Running Gmeek.py..."
          python Gmeek.py ${{ secrets.GITHUB_TOKEN }} ${{ github.repository }} --issue_number '${{ github.event.issue.number }}'
          echo "Gmeek.py finished."

          echo "Attempting to overwrite generated tag.html with user's version..."
          USER_TAG_HTML="${{ github.workspace }}/docs/tag.html"
          GMEEK_GENERATED_TAG_HTML="/opt/Gmeek/docs/tag.html" 
          
          if [ -f "$USER_TAG_HTML" ]; then
            if [ -f "$GMEEK_GENERATED_TAG_HTML" ]; then
                echo "Overwriting $GMEEK_GENERATED_TAG_HTML with $USER_TAG_HTML"
                cp "$USER_TAG_HTML" "$GMEEK_GENERATED_TAG_HTML"
                echo "User's tag.html restored into generated docs."
            else
                 echo "Gmeek did not generate tag.html, copying user's version anyway."
                 cp "$USER_TAG_HTML" "/opt/Gmeek/docs/"
                 echo "User's tag.html copied into generated docs."
            fi
          else
            echo "Warning: User's source tag.html not found in initial checkout workspace ($USER_TAG_HTML)."
          fi

          echo "Copying final docs back to workspace..."
          cp -a /opt/Gmeek/docs ${{ github.workspace }} 
          cp -a /opt/Gmeek/backup ${{ github.workspace }} 
          cp /opt/Gmeek/blogBase.json ${{ github.workspace }} 
          echo "Copying complete."

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Node.js dependencies
        run: npm install flexsearch @octokit/rest

      - name: Generate search index
        run: node generate-search-index.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs/.'
          
  deploy:
    name: Deploy blog
    runs-on: ubuntu-24.04
    needs: build
    permissions:
      contents: write
      pages: write
      id-token: write
    concurrency:
      group: "pages"
      cancel-in-progress: false
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
